{
	"version": 3,
	"file": "large.css",
	"sources": [
		"large.scss",
		"_sass/large.scss",
		"_sass/libs/_vars.scss",
		"_sass/libs/_functions.scss",
		"_sass/libs/_mixins.scss",
		"_sass/libs/_vendor.scss",
		"_sass/libs/_breakpoints.scss",
		"_sass/large/base/_reset.scss",
		"_sass/large/base/_page.scss",
		"_sass/large/base/_typography.scss",
		"_sass/large/components/_form.scss",
		"_sass/large/components/_icon.scss",
		"_sass/large/components/_image.scss",
		"_sass/large/components/_list.scss",
		"_sass/large/components/_actions.scss",
		"_sass/large/components/_icons.scss",
		"_sass/large/components/_grid-icons.scss",
		"_sass/large/components/_contact-icons.scss",
		"_sass/large/components/_table.scss",
		"_sass/large/components/_button.scss",
		"_sass/large/components/_gallery.scss",
		"_sass/large/components/_panel.scss",
		"_sass/large/components/_panel-banner.scss",
		"_sass/large/components/_panel-spotlight.scss",
		"_sass/large/layout/_footer.scss",
		"_sass/large/layout/_header.scss",
		"_sass/large/layout/_page-wrapper.scss",
		"_sass/large/layout/_wrapper.scss"
	],
	"sourcesContent": [
		"@import \"large\";\n",
		"@import 'libs/vars';\r\n@import 'libs/functions';\r\n@import 'libs/mixins';\r\n@import 'libs/vendor';\r\n@import 'libs/breakpoints';\r\n\r\n/*\r\nEthereal by HTML5 UP\r\nhtml5up.net | @ajlkn\r\nFree for personal and commercial use under the CCA 3.0 license (html5up.net/license)\r\n*/\r\n\r\n// Breakpoints.\r\n\r\n@include breakpoints((\r\n    xlarge:   ( 1281px,  1680px ),\r\n    large:    ( 981px,   1280px )\r\n));\r\n\r\n// Base.\r\n\r\n@import 'large/base/reset';\r\n@import 'large/base/page';\r\n@import 'large/base/typography';\r\n\r\n// Component.\r\n\r\n@import 'large/components/form';\r\n@import 'large/components/icon';\r\n@import 'large/components/image';\r\n@import 'large/components/list';\r\n@import 'large/components/actions';\r\n@import 'large/components/icons';\r\n@import 'large/components/grid-icons';\r\n@import 'large/components/contact-icons';\r\n@import 'large/components/table';\r\n@import 'large/components/button';\r\n@import 'large/components/gallery';\r\n@import 'large/components/panel';\r\n@import 'large/components/panel-banner';\r\n@import 'large/components/panel-spotlight';\r\n\r\n// Layout.\r\n\r\n@import 'large/layout/footer';\r\n@import 'large/layout/header';\r\n@import 'large/layout/page-wrapper';\r\n@import 'large/layout/wrapper';\r\n",
		"// Misc.\r\n$misc: (\r\n    z-index-base:                   10000,\r\n    gallery-lightbox-opacity:       0.875\r\n);\r\n\r\n// Duration.\r\n$duration: (\r\n    transition:                     0.2s,\r\n    gallery-lightbox-fadein:        0.5s\r\n);\r\n\r\n// Size.\r\n$size: (\r\n    border-radius:                  0.25rem,\r\n    element-height:                 2.5rem,\r\n    element-margin:                 1.5rem,\r\n    pad:                            3.5rem,\r\n    pad-small-tb:                   3.5rem * 0.825,\r\n    pad-small-lr:                   3.5rem * 0.5,\r\n    span-fixed:                     10rem,\r\n    span-variable:                  10%\r\n);\r\n\r\n// Font.\r\n$font: (\r\n    family:                         ('Source Sans Pro', Helvetica, sans-serif),\r\n    family-heading:                 (Arial, Helvetica, sans-serif),\r\n    family-fixed:                   ('Courier New', monospace),\r\n    weight:                         300,\r\n    weight-bold:                    400,\r\n    weight-heading:                 700\r\n);\r\n\r\n// Palette.\r\n$palette: (\r\n    bg:                             #2e2b37,\r\n    bg-alt:                         #e1e6e1,\r\n    fg:                             rgba(255,255,255,0.75),\r\n    fg-bold:                        rgba(255,255,255,0.875),\r\n    fg-light:                       rgba(255,255,255,0.5),\r\n    border:                         rgba(255,255,255,0.25),\r\n    border-bg:                      rgba(255,255,255,0.075),\r\n    border-bg-alt:                  rgba(255,255,255,0.125),\r\n    accent1:                        #726193,\r\n    accent2:                        #e37b7c,\r\n    accent3:                        #ffe4b4,\r\n    accent4:                        #353865\r\n);\r\n",
		"/// Removes a specific item from a list.\r\n/// @author Hugo Giraudel\r\n/// @param {list} $list List.\r\n/// @param {integer} $index Index.\r\n/// @return {list} Updated list.\r\n@function remove-nth($list, $index) {\r\n\r\n    $result: null;\r\n\r\n    @if type-of($index) != number {\r\n        @warn \"$index: #{quote($index)} is not a number for `remove-nth`.\";\r\n    }\r\n    @else if $index == 0 {\r\n        @warn \"List index 0 must be a non-zero integer for `remove-nth`.\";\r\n    }\r\n    @else if abs($index) > length($list) {\r\n        @warn \"List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.\";\r\n    }\r\n    @else {\r\n\r\n        $result: ();\r\n        $index: if($index < 0, length($list) + $index + 1, $index);\r\n\r\n        @for $i from 1 through length($list) {\r\n\r\n            @if $i != $index {\r\n                $result: append($result, nth($list, $i));\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @return $result;\r\n\r\n}\r\n\r\n/// Gets a value from a map.\r\n/// @author Hugo Giraudel\r\n/// @param {map} $map Map.\r\n/// @param {string} $keys Key(s).\r\n/// @return {string} Value.\r\n@function val($map, $keys...) {\r\n\r\n    @if nth($keys, 1) == null {\r\n        $keys: remove-nth($keys, 1);\r\n    }\r\n\r\n    @each $key in $keys {\r\n        $map: map-get($map, $key);\r\n    }\r\n\r\n    @return $map;\r\n\r\n}\r\n\r\n/// Gets a duration value.\r\n/// @param {string} $keys Key(s).\r\n/// @return {string} Value.\r\n@function _duration($keys...) {\r\n    @return val($duration, $keys...);\r\n}\r\n\r\n/// Gets a font value.\r\n/// @param {string} $keys Key(s).\r\n/// @return {string} Value.\r\n@function _font($keys...) {\r\n    @return val($font, $keys...);\r\n}\r\n\r\n/// Gets a misc value.\r\n/// @param {string} $keys Key(s).\r\n/// @return {string} Value.\r\n@function _misc($keys...) {\r\n    @return val($misc, $keys...);\r\n}\r\n\r\n/// Gets a palette value.\r\n/// @param {string} $keys Key(s).\r\n/// @return {string} Value.\r\n@function _palette($keys...) {\r\n    @return val($palette, $keys...);\r\n}\r\n\r\n/// Gets a size value.\r\n/// @param {string} $keys Key(s).\r\n/// @return {string} Value.\r\n@function _size($keys...) {\r\n    @return val($size, $keys...);\r\n}",
		"/// Makes an element's :before pseudoelement a FontAwesome icon.\r\n/// @param {string} $content Optional content value to use.\r\n/// @param {string} $category Optional category to use.\r\n/// @param {string} $where Optional pseudoelement to target (before or after).\r\n@mixin icon($content: false, $category: regular, $where: before) {\r\n\r\n    text-decoration: none;\r\n\r\n    &:#{$where} {\r\n\r\n        @if $content {\r\n            content: $content;\r\n        }\r\n\r\n        -moz-osx-font-smoothing: grayscale;\r\n        -webkit-font-smoothing: antialiased;\r\n        display: inline-block;\r\n        font-style: normal;\r\n        font-variant: normal;\r\n        text-rendering: auto;\r\n        line-height: 1;\r\n        text-transform: none !important;\r\n\r\n        @if ($category == brands) {\r\n            font-family: 'Font Awesome 5 Brands';\r\n        }\r\n        @elseif ($category == solid) {\r\n            font-family: 'Font Awesome 5 Free';\r\n            font-weight: 900;\r\n        }\r\n        @else {\r\n            font-family: 'Font Awesome 5 Free';\r\n            font-weight: 400;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/// Applies padding to an element, taking the current element-margin value into account.\r\n/// @param {mixed} $tb Top/bottom padding.\r\n/// @param {mixed} $lr Left/right padding.\r\n/// @param {list} $pad Optional extra padding (in the following order top, right, bottom, left)\r\n/// @param {bool} $important If true, adds !important.\r\n@mixin padding($tb, $lr, $pad: (0,0,0,0), $important: null) {\r\n\r\n    @if $important {\r\n        $important: '!important';\r\n    }\r\n\r\n    $x: 0.1em;\r\n\r\n    @if unit(_size(element-margin)) == 'rem' {\r\n        $x: 0.1rem;\r\n    }\r\n\r\n    padding: ($tb + nth($pad,1)) ($lr + nth($pad,2)) max($x, $tb - _size(element-margin) + nth($pad,3)) ($lr + nth($pad,4)) #{$important};\r\n\r\n}\r\n\r\n/// Encodes a SVG data URL so IE doesn't choke (via codepen.io/jakob-e/pen/YXXBrp).\r\n/// @param {string} $svg SVG data URL.\r\n/// @return {string} Encoded SVG data URL.\r\n@function svg-url($svg) {\r\n\r\n    $svg: str-replace($svg, '\"', '\\'');\r\n    $svg: str-replace($svg, '%', '%25');\r\n    $svg: str-replace($svg, '<', '%3C');\r\n    $svg: str-replace($svg, '>', '%3E');\r\n    $svg: str-replace($svg, '&', '%26');\r\n    $svg: str-replace($svg, '#', '%23');\r\n    $svg: str-replace($svg, '{', '%7B');\r\n    $svg: str-replace($svg, '}', '%7D');\r\n    $svg: str-replace($svg, ';', '%3B');\r\n\r\n    @return url(\"data:image/svg+xml;charset=utf8,#{$svg}\");\r\n\r\n}\r\n\r\n/// Defines a unit of width: size the elements so their width is a multiple of the unit.\r\n/// @param {mixed} $x the actual size of the unit.\r\n@mixin spans($x) {\r\n    @for $i from 0 through 10 {\r\n\r\n        @if ($i > 0) {\r\n            .span-#{$i} {\r\n                width: ($x * $i);\r\n            }\r\n        }\r\n\r\n        @if ($i < 10) {\r\n            .span-#{$i}-25 {\r\n                width: ($x * $i) + ($x * 0.25);\r\n            }\r\n\r\n            .span-#{$i}-5 {\r\n                width: ($x * $i) + ($x * 0.5);\r\n            }\r\n\r\n            .span-#{$i}-75 {\r\n                width: ($x * $i) + ($x * 0.75);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@mixin spans-small($x) {\r\n    @for $i from 0 through 10 {\r\n\r\n        @if ($i > 0) {\r\n            .span-#{$i} {\r\n                width: 100%;\r\n            }\r\n        }\r\n\r\n        @if ($i < 10) {\r\n            .span-#{$i}-25 {\r\n                width: 100%;\r\n            }\r\n\r\n            .span-#{$i}-5 {\r\n                width: 100%;\r\n            }\r\n\r\n            .span-#{$i}-75 {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/// \r\n@mixin gradient-background($tint: false, $opacity: 0.25, $stop1: 25%, $stop2: 50%, $angle: 45deg) {\r\n    $background-image: (\r\n        url('./images/overlay.png'),\r\n        linear-gradient($angle, transparentize(_palette(accent1), (1 - $opacity)) $stop1, transparentize(_palette(accent2), (1 - $opacity)) $stop2, transparentize(_palette(accent3), (1 - $opacity)))\r\n    );\r\n\r\n    $background-size: (\r\n        128px 128px,\r\n        auto\r\n    );\r\n\r\n    @if ($tint) {\r\n        $x: linear-gradient(0deg, rgba(0,0,0,0.125), rgba(0,0,0,0.125));\r\n        $y: auto;\r\n        $background-image: append($background-image, $x);\r\n        $background-size: append($background-size, $y);\r\n    }\r\n\r\n    background-image: $background-image;\r\n    background-size: $background-size;\r\n}\r\n\r\n@mixin gradient-background-small($tint: false, $opacity: 0.25, $stop1: 25%, $stop2: 50%) {\r\n    @include gradient-background($tint, $opacity, $stop1, $stop2, 135deg);\r\n}\r\n\r\n/// \r\n@mixin panel-colors {\r\n    $opacity: 0.175;\r\n    $darken: 3;\r\n    $desaturate: 3;\r\n\r\n    &.color0 {\r\n        @include gradient-background(false, 1, 20%, 60%);\r\n    }\r\n\r\n    &.color1 {\r\n        @include gradient-background;\r\n        background-color: _palette(accent1);\r\n    }\r\n\r\n    &.color2 {\r\n        @include gradient-background;\r\n        background-color: _palette(accent2);\r\n    }\r\n\r\n    &.color3 {\r\n        @include gradient-background;\r\n        background-color: desaturate(darken(_palette(accent3), 9), 9);\r\n    }\r\n\r\n    &.color4 {\r\n        @include gradient-background;\r\n        background-color: _palette(accent4);\r\n    }\r\n\r\n    &.color1-alt {\r\n        @include gradient-background(false, $opacity);\r\n        background-color: desaturate(darken(_palette(accent1), $darken), $desaturate);\r\n    }\r\n\r\n    &.color2-alt {\r\n        @include gradient-background(false, $opacity);\r\n        background-color: desaturate(darken(_palette(accent2), $darken), $desaturate);\r\n    }\r\n\r\n    &.color3-alt {\r\n        @include gradient-background(false, $opacity);\r\n        background-color: desaturate(darken(_palette(accent3), 12), 12);\r\n    }\r\n\r\n    &.color4-alt {\r\n        @include gradient-background(false, $opacity);\r\n        background-color: desaturate(darken(_palette(accent4), $darken), $desaturate);\r\n    }\r\n}\r\n\r\n@mixin panel-colors-small {\r\n    $opacity: 0.175;\r\n    $darken: 3;\r\n    $desaturate: 3;\r\n\r\n    &.color1 {\r\n        @include gradient-background-small;\r\n        background-color: _palette(accent1);\r\n    }\r\n\r\n    &.color2 {\r\n        @include gradient-background-small;\r\n        background-color: _palette(accent2);\r\n    }\r\n\r\n    &.color3 {\r\n        @include gradient-background-small;\r\n        background-color: _palette(accent3);\r\n    }\r\n\r\n    &.color4 {\r\n        @include gradient-background-small;\r\n        background-color: _palette(accent4);\r\n    }\r\n\r\n    &.color1-alt {\r\n        @include gradient-background-small(false, $opacity);\r\n        background-color: desaturate(darken(_palette(accent1), $darken), $desaturate);\r\n    }\r\n\r\n    &.color2-alt {\r\n        @include gradient-background-small(false, $opacity);\r\n        background-color: desaturate(darken(_palette(accent2), $darken), $desaturate);\r\n    }\r\n\r\n    &.color3-alt {\r\n        @include gradient-background-small(false, $opacity);\r\n        background-color: desaturate(darken(_palette(accent3), $darken), $desaturate);\r\n    }\r\n\r\n    &.color4-alt {\r\n        @include gradient-background-small(false, $opacity);\r\n        background-color: desaturate(darken(_palette(accent4), $darken), $desaturate);\r\n    }\r\n}\r\n",
		"// vendor.scss v1.0 | @ajlkn | MIT licensed */\n\n// Vars.\n\n/// Vendor prefixes.\n/// @var {list}\n$vendor-prefixes: (\n    '-moz-',\n    '-webkit-',\n    '-ms-',\n    ''\n);\n\n/// Properties that should be vendorized.\n/// Data via caniuse.com, github.com/postcss/autoprefixer, and developer.mozilla.org\n/// @var {list}\n$vendor-properties: (\n\n    // Animation.\n        'animation',\n        'animation-delay',\n        'animation-direction',\n        'animation-duration',\n        'animation-fill-mode',\n        'animation-iteration-count',\n        'animation-name',\n        'animation-play-state',\n        'animation-timing-function',\n\n    // Appearance.\n        'appearance',\n\n    // Backdrop filter.\n        'backdrop-filter',\n\n    // Background image options.\n        'background-clip',\n        'background-origin',\n        'background-size',\n\n    // Box sizing.\n        'box-sizing',\n\n    // Clip path.\n        'clip-path',\n\n    // Filter effects.\n        'filter',\n\n    // Flexbox.\n        'align-content',\n        'align-items',\n        'align-self',\n        'flex',\n        'flex-basis',\n        'flex-direction',\n        'flex-flow',\n        'flex-grow',\n        'flex-shrink',\n        'flex-wrap',\n        'justify-content',\n        'order',\n\n    // Font feature.\n        'font-feature-settings',\n        'font-language-override',\n        'font-variant-ligatures',\n\n    // Font kerning.\n        'font-kerning',\n\n    // Fragmented borders and backgrounds.\n        'box-decoration-break',\n\n    // Grid layout.\n        'grid-column',\n        'grid-column-align',\n        'grid-column-end',\n        'grid-column-start',\n        'grid-row',\n        'grid-row-align',\n        'grid-row-end',\n        'grid-row-start',\n        'grid-template-columns',\n        'grid-template-rows',\n\n    // Hyphens.\n        'hyphens',\n        'word-break',\n\n    // Masks.\n        'mask',\n        'mask-border',\n        'mask-border-outset',\n        'mask-border-repeat',\n        'mask-border-slice',\n        'mask-border-source',\n        'mask-border-width',\n        'mask-clip',\n        'mask-composite',\n        'mask-image',\n        'mask-origin',\n        'mask-position',\n        'mask-repeat',\n        'mask-size',\n\n    // Multicolumn.\n        'break-after',\n        'break-before',\n        'break-inside',\n        'column-count',\n        'column-fill',\n        'column-gap',\n        'column-rule',\n        'column-rule-color',\n        'column-rule-style',\n        'column-rule-width',\n        'column-span',\n        'column-width',\n        'columns',\n\n    // Object fit.\n        'object-fit',\n        'object-position',\n\n    // Regions.\n        'flow-from',\n        'flow-into',\n        'region-fragment',\n\n    // Scroll snap points.\n        'scroll-snap-coordinate',\n        'scroll-snap-destination',\n        'scroll-snap-points-x',\n        'scroll-snap-points-y',\n        'scroll-snap-type',\n\n    // Shapes.\n        'shape-image-threshold',\n        'shape-margin',\n        'shape-outside',\n\n    // Tab size.\n        'tab-size',\n\n    // Text align last.\n        'text-align-last',\n\n    // Text decoration.\n        'text-decoration-color',\n        'text-decoration-line',\n        'text-decoration-skip',\n        'text-decoration-style',\n\n    // Text emphasis.\n        'text-emphasis',\n        'text-emphasis-color',\n        'text-emphasis-position',\n        'text-emphasis-style',\n\n    // Text size adjust.\n        'text-size-adjust',\n\n    // Text spacing.\n        'text-spacing',\n\n    // Transform.\n        'transform',\n        'transform-origin',\n\n    // Transform 3D.\n        'backface-visibility',\n        'perspective',\n        'perspective-origin',\n        'transform-style',\n\n    // Transition.\n        'transition',\n        'transition-delay',\n        'transition-duration',\n        'transition-property',\n        'transition-timing-function',\n\n    // Unicode bidi.\n        'unicode-bidi',\n\n    // User select.\n        'user-select',\n\n    // Writing mode.\n        'writing-mode',\n\n);\n\n/// Values that should be vendorized.\n/// Data via caniuse.com, github.com/postcss/autoprefixer, and developer.mozilla.org\n/// @var {list}\n$vendor-values: (\n\n    // Cross fade.\n        'cross-fade',\n\n    // Element function.\n        'element',\n\n    // Filter function.\n        'filter',\n\n    // Flexbox.\n        'flex',\n        'inline-flex',\n\n    // Grab cursors.\n        'grab',\n        'grabbing',\n\n    // Gradients.\n        'linear-gradient',\n        'repeating-linear-gradient',\n        'radial-gradient',\n        'repeating-radial-gradient',\n\n    // Grid layout.\n        'grid',\n        'inline-grid',\n\n    // Image set.\n        'image-set',\n\n    // Intrinsic width.\n        'max-content',\n        'min-content',\n        'fit-content',\n        'fill',\n        'fill-available',\n        'stretch',\n\n    // Sticky position.\n        'sticky',\n\n    // Transform.\n        'transform',\n\n    // Zoom cursors.\n        'zoom-in',\n        'zoom-out',\n\n);\n\n// Functions.\n\n/// Removes a specific item from a list.\n/// @author Hugo Giraudel\n/// @param {list} $list List.\n/// @param {integer} $index Index.\n/// @return {list} Updated list.\n@function remove-nth($list, $index) {\n\n    $result: null;\n\n    @if type-of($index) != number {\n        @warn \"$index: #{quote($index)} is not a number for `remove-nth`.\";\n    }\n    @else if $index == 0 {\n        @warn \"List index 0 must be a non-zero integer for `remove-nth`.\";\n    }\n    @else if abs($index) > length($list) {\n        @warn \"List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.\";\n    }\n    @else {\n\n        $result: ();\n        $index: if($index < 0, length($list) + $index + 1, $index);\n\n        @for $i from 1 through length($list) {\n\n            @if $i != $index {\n                $result: append($result, nth($list, $i));\n            }\n\n        }\n\n    }\n\n    @return $result;\n\n}\n\n/// Replaces a substring within another string.\n/// @author Hugo Giraudel\n/// @param {string} $string String.\n/// @param {string} $search Substring.\n/// @param {string} $replace Replacement.\n/// @return {string} Updated string.\n@function str-replace($string, $search, $replace: '') {\n\n    $index: str-index($string, $search);\n\n    @if $index {\n        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n    }\n\n    @return $string;\n\n}\n\n/// Replaces a substring within each string in a list.\n/// @param {list} $strings List of strings.\n/// @param {string} $search Substring.\n/// @param {string} $replace Replacement.\n/// @return {list} Updated list of strings.\n@function str-replace-all($strings, $search, $replace: '') {\n\n    @each $string in $strings {\n        $strings: set-nth($strings, index($strings, $string), str-replace($string, $search, $replace));\n    }\n\n    @return $strings;\n\n}\n\n// Mixins.\n\n/// Wraps @content in vendorized keyframe blocks.\n/// @param {string} $name Name.\n@mixin keyframes($name) {\n\n    @-moz-keyframes #{$name} { @content; }\n    @-webkit-keyframes #{$name} { @content; }\n    @-ms-keyframes #{$name} { @content; }\n    @keyframes #{$name} { @content; }\n\n}\n\n/// Vendorizes a declaration's property and/or value(s).\n/// @param {string} $property Property.\n/// @param {mixed} $value String/list of value(s).\n@mixin vendor($property, $value) {\n\n    // Determine if property should expand.\n        $expandProperty: index($vendor-properties, $property);\n\n    // Determine if value should expand (and if so, add '-prefix-' placeholder).\n        $expandValue: false;\n\n        @each $x in $value {\n            @each $y in $vendor-values {\n                @if $y == str-slice($x, 1, str-length($y)) {\n\n                    $value: set-nth($value, index($value, $x), '-prefix-' + $x);\n                    $expandValue: true;\n\n                }\n            }\n        }\n\n    // Expand property?\n        @if $expandProperty {\n            @each $vendor in $vendor-prefixes {\n                #{$vendor}#{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\n            }\n        }\n\n    // Expand just the value?\n        @elseif $expandValue {\n            @each $vendor in $vendor-prefixes {\n                #{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\n            }\n        }\n\n    // Neither? Treat them as a normal declaration.\n        @else {\n            #{$property}: #{$value};\n        }\n\n}\n",
		"// breakpoints.scss v1.0 | @ajlkn | MIT licensed */\n\n// Vars.\n\n/// Breakpoints.\n/// @var {list}\n$breakpoints: () !global;\n\n// Mixins.\n\n/// Sets breakpoints.\n/// @param {map} $x Breakpoints.\n@mixin breakpoints($x: ()) {\n    $breakpoints: $x !global;\n}\n\n/// Wraps @content in a @media block targeting a specific orientation.\n/// @param {string} $orientation Orientation.\n@mixin orientation($orientation) {\n    @media screen and (orientation: #{$orientation}) {\n        @content;\n    }\n}\n\n/// Wraps @content in a @media block using a given query.\n/// @param {string} $query Query.\n@mixin breakpoint($query: null) {\n\n    $breakpoint: null;\n    $op: null;\n    $media: null;\n\n    // Determine operator, breakpoint.\n\n        // Greater than or equal.\n            @if (str-slice($query, 0, 2) == '>=') {\n\n                $op: 'gte';\n                $breakpoint: str-slice($query, 3);\n\n            }\n\n        // Less than or equal.\n            @elseif (str-slice($query, 0, 2) == '<=') {\n\n                $op: 'lte';\n                $breakpoint: str-slice($query, 3);\n\n            }\n\n        // Greater than.\n            @elseif (str-slice($query, 0, 1) == '>') {\n\n                $op: 'gt';\n                $breakpoint: str-slice($query, 2);\n\n            }\n\n        // Less than.\n            @elseif (str-slice($query, 0, 1) == '<') {\n\n                $op: 'lt';\n                $breakpoint: str-slice($query, 2);\n\n            }\n\n        // Not.\n            @elseif (str-slice($query, 0, 1) == '!') {\n\n                $op: 'not';\n                $breakpoint: str-slice($query, 2);\n\n            }\n\n        // Equal.\n            @else {\n\n                $op: 'eq';\n                $breakpoint: $query;\n\n            }\n\n    // Build media.\n        @if ($breakpoint and map-has-key($breakpoints, $breakpoint)) {\n\n            $a: map-get($breakpoints, $breakpoint);\n\n            // Range.\n                @if (type-of($a) == 'list') {\n\n                    $x: nth($a, 1);\n                    $y: nth($a, 2);\n\n                    // Max only.\n                        @if ($x == null) {\n\n                            // Greater than or equal (>= 0 / anything)\n                                @if ($op == 'gte') {\n                                    $media: 'screen';\n                                }\n\n                            // Less than or equal (<= y)\n                                @elseif ($op == 'lte') {\n                                    $media: 'screen and (max-width: ' + $y + ')';\n                                }\n\n                            // Greater than (> y)\n                                @elseif ($op == 'gt') {\n                                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\n                                }\n\n                            // Less than (< 0 / invalid)\n                                @elseif ($op == 'lt') {\n                                    $media: 'screen and (max-width: -1px)';\n                                }\n\n                            // Not (> y)\n                                @elseif ($op == 'not') {\n                                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\n                                }\n\n                            // Equal (<= y)\n                                @else {\n                                    $media: 'screen and (max-width: ' + $y + ')';\n                                }\n\n                        }\n\n                    // Min only.\n                        @else if ($y == null) {\n\n                            // Greater than or equal (>= x)\n                                @if ($op == 'gte') {\n                                    $media: 'screen and (min-width: ' + $x + ')';\n                                }\n\n                            // Less than or equal (<= inf / anything)\n                                @elseif ($op == 'lte') {\n                                    $media: 'screen';\n                                }\n\n                            // Greater than (> inf / invalid)\n                                @elseif ($op == 'gt') {\n                                    $media: 'screen and (max-width: -1px)';\n                                }\n\n                            // Less than (< x)\n                                @elseif ($op == 'lt') {\n                                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\n                                }\n\n                            // Not (< x)\n                                @elseif ($op == 'not') {\n                                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\n                                }\n\n                            // Equal (>= x)\n                                @else {\n                                    $media: 'screen and (min-width: ' + $x + ')';\n                                }\n\n                        }\n\n                    // Min and max.\n                        @else {\n\n                            // Greater than or equal (>= x)\n                                @if ($op == 'gte') {\n                                    $media: 'screen and (min-width: ' + $x + ')';\n                                }\n\n                            // Less than or equal (<= y)\n                                @elseif ($op == 'lte') {\n                                    $media: 'screen and (max-width: ' + $y + ')';\n                                }\n\n                            // Greater than (> y)\n                                @elseif ($op == 'gt') {\n                                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\n                                }\n\n                            // Less than (< x)\n                                @elseif ($op == 'lt') {\n                                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\n                                }\n\n                            // Not (< x and > y)\n                                @elseif ($op == 'not') {\n                                    $media: 'screen and (max-width: ' + ($x - 1) + '), screen and (min-width: ' + ($y + 1) + ')';\n                                }\n\n                            // Equal (>= x and <= y)\n                                @else {\n                                    $media: 'screen and (min-width: ' + $x + ') and (max-width: ' + $y + ')';\n                                }\n\n                        }\n\n                }\n\n            // String.\n                @else {\n\n                    // Missing a media type? Prefix with \"screen\".\n                        @if (str-slice($a, 0, 1) == '(') {\n                            $media: 'screen and ' + $a;\n                        }\n\n                    // Otherwise, use as-is.\n                        @else {\n                            $media: $a;\n                        }\n\n                }\n\n        }\n\n    // Output.\n        @media #{$media} {\n            @content;\n        }\n\n}\n",
		"",
		"",
		"html {\r\n    @include breakpoint('<=xlarge') {\r\n        font-size: 12pt;\r\n        font-size: 1.1vmax;\r\n    }\r\n\r\n    @include breakpoint('<=large') {\r\n        font-size: 11pt;\r\n        font-size: 1.5vmax;\r\n    }\r\n}\r\n",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		""
	],
	"names": [],
	"mappings": "AM0NQ,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,MAAM,EG1N5C,AAAA,IAAI,AAAC,CAEG,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,OAAO,CAOzB,CHgNO,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,MAAM,EG1N5C,AAAA,IAAI,AAAC,CAOG,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,OAAO,CAEzB"
}